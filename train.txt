import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from xgboost import XGBRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Load dataset
df = pd.read_csv("materials_data.csv")
X = df[["Band Gap", "Energy per Atom", "Formation Energy"]]
y = df["Band Gap"]

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Normalize features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Train different models



models = {
    
    "Linear Regression": LinearRegression(),
    "Decision Tree": DecisionTreeRegressor(),
"Random Forest": RandomForestRegressor(n_estimators=100, 
    random_state=42),
    "XGBoost": XGBRegressor(n_estimators=100, 
    learning_rate=0.1, random_state=42)
}

# Train and evaluate each model
for name, model in models.items():
model.fit(X_train_scaled, y_train)
y_pred = model.predict(X_test_scaled)
print(f"\n�� {name} Performance:")
print(f"-MAE:{mean_absolute_error(y_test, 
y_pred)f}")
print(f"-RMSE:{np.sqrt(mean_squared_error
(y_t,y_p)):.4f}")
print(f"-R² Score:{r2_score(y_test, y_pred):.
4f}")